import settings from 'carbon-components/es/globals/js/settings';
import classnames from 'classnames';
import { html, property, customElement, LitElement } from 'lit-element';
import styles from './side-nav.scss';

const { prefix } = settings;

/**
 * Side nav menu item.
 */
@customElement(`${prefix}-side-nav-link`)
class BXSideNavLink extends LitElement {
  /**
   * Handles `slotchange` event on the `<slot>` for the title icon.
   */
  private _handleSlotChangeTitleIcon({ target }) {
    this.shadowRoot!.getElementById('title-icon-container')!.toggleAttribute('hidden', target.assignedNodes().length === 0);
  }

  /**
   * `true` if the menu item should be active. Corresponds to the attribute with the same name.
   */
  @property({ type: Boolean, reflect: true })
  active = false;

  /**
   * Link `href`. Corresponds to the attribute with the same name.
   */
  @property()
  href = '';

  connectedCallback() {
    if (!this.hasAttribute('role')) {
      this.setAttribute('role', 'listitem');
    }
    super.connectedCallback();
  }

  render() {
    const { active, href, _handleSlotChangeTitleIcon: handleSlotChangeTitleIcon } = this;
    const classes = classnames(`${prefix}--side-nav__link`, {
      [`${prefix}--side-nav__link--current`]: active,
    });
    return html`
      <a class="${classes}" href="${href}">
        <div id="title-icon-container" hidden class="${prefix}--side-nav__icon">
          <slot name="title-icon" @slotchange=${handleSlotChangeTitleIcon}></slot>
        </div>
        <span class="${prefix}--side-nav__link-text">
          <slot></slot>
        </span>
      </a>
    `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default BXSideNavLink;
